upstream lanproxy {
  server 192.168.6.101:80;
}
upstream appproxy {
  server 192.168.6.102:80;
}
upstream gitproxy{
  server 192.168.6.4:2222;
}
server{
  listen 80;
  access_log /var/log/lan.access.log;
  error_log /var/log/lan.error.log;
  location / {
        proxy_pass http://lanproxy;

        proxy_redirect off;
        proxy_set_header   Host             $host:$server_port;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_max_temp_file_size 0;
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
  }
 #成功的关键，在于301重定向由http://host/test重定向至http://host/test/所以最后的/不能省 
  location ^~ /apps/ {
        proxy_pass http://appproxy/apps/;
        server_name_in_redirect on;
     #  proxy_redirect http://appproxy/ $scheme://$host/;
        proxy_set_header   Host             $host:$server_port;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_max_temp_file_size 0;
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
  }
  location =/git {
     proxy_pass http://gitproxy;
}
  location ^~ /jenkins/ {
       proxy_pass http://appproxy/jenkins/;
}
}
